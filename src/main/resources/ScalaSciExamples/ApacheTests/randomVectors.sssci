
// generate vectors with uncorrelated components.
// Components of generated vectors follow (independent)
// Gaussian distributions, with parameters supplied in the constructor

import org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator
import org.apache.commons.math3.random.JDKRandomGenerator
import org.apache.commons.math3.random.UniformRandomGenerator

// build an uncorrelated random vector generator from
// its mean and standard deviation vectors
// means: expected mean values for each component
// stds: standard deviation for each component
// generator: underlying generator for uncorrelated normalized components


var means = Array(-3.4, 4.5, 6,9)  // the Gaussian means
var stds = Array(2.3, 8.9, 13.4, 7.65)  // the standard deviation vector
var generator = new UniformRandomGenerator(new JDKRandomGenerator)
var uncorrelatedRandomGen = new UncorrelatedRandomVectorGenerator(means, stds, generator)


// create now se samples
var nsamples = 2000
var samples = Array.ofDim[Double](4, nsamples)
for (k<-0 until nsamples) {
     
  var sample = uncorrelatedRandomGen.nextVector
  samples( 0, k) = sample(0)
  samples( 1, k) = sample(1)
  samples( 2, k) = sample(2)
  samples( 3, k) = sample(3)
  
  }
  
  figure(1)
  subplot(4,1,1)
  plot(samples(0,::))
  subplot(4,1,2)
  plot(samples(1,::))
  subplot(4,1,3)
  plot(samples(2,::))
  subplot(4,1,4)
  plot(samples(3,::))
