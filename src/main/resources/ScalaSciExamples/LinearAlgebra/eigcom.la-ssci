// NUMAL related imports
     import _root_.java.util.Vector ; 
    import _root_.numal._ ; 
    import _root_.numal.Algebraic_eval._;
    import _root_.numal.Analytic_eval._
    import _root_.numal.Analytic_problems._
    import _root_.numal.Approximation._
    import _root_.numal.Basic._;
    import _root_.numal.FFT._;
    import  _root_.numal.Linear_algebra._; 
    import _root_.numal.Special_functions._;
    import java.text.DecimalFormat 

// tests the procedure eigcom:
//   computes the eigenvalues $\lamda_j$ and eigenvectors $u^{(j)}, (j=1, ..., n)$ of an nXn complex matrix A.

 var em = new Array[Double](8)
 var valr = new Array[Double](5)
 var vali = new Array[Double](5)
 var ar = Array.ofDim[Double](5,5)
 var ai = Array.ofDim[Double](5,5)
 var vr = Array.ofDim[Double](5, 5)
 var vi = Array.ofDim[Double](5,5)

    ar(1)(1)=1.0; ar(1)(4)=1.0; ar(2)(2)=1.0; ar(3)(2)=1.0; ar(4)(1)=1.0; ar(4)(3)=1.0;
    ai(1)(2)=1.0; ai(1)(4)=1.0;ai(2)(3)=1.0; ai(3)(3)=1.0; ai(4)(2)=1.0;
    ar(1)(2)=2.0; ar(2)(3)=2.0; ar(3)(1)=2.0; ai(1)(3)=2.0; ai(2)(2)=2.0; ai(3)(4)=2.0; ai(4)(1)=2.0;
    ar(1)(3)=3.0; ar(2)(1)=3.0; ar(3)(3)=3.0; ar(4)(2)= 3.0;
    ai(1)(1)=3.0; ai(2)(4)=3.0; ai(3)(1)=3.0; ai(4)(4)=3.0;
    ar(2)(4)=4.0; ai(2)(1)=4.0; ai(4)(3)=4.0;
    ar(3)(4)=5.0; ar(4)(4)=5.0; ai(3)(2)=5.0;
    em(0)=5.0e-6;  em(2)=1.0e-5;  em(4)=10.0;  em(6)=10.0;
    
    println("EIGCOM:  " + Linear_algebra.eigcom(ar,ai,4,em,valr,vali,vr,vi));
    println("\nEigenvalues:");
    for (i<-1 to 4)
      println("\t" + valr(i) +  "\t" + vali(i) + " * I ");
    
    println("\nFirst eigenvector:");

    for (i<-1 to 4)
      println("\t" + vr(i)(1) +  "\t" + vi(i)(1));
    
  println( "\nEM(1):  " + em(1) +       "\nEM(3):  " + em(3) +  "\nEM(5):  " + em(5) +       "\nEM(7):  " + em(7));
	

