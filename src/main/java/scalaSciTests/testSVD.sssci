 

// Matrix class
var myMat = M1("5 3 -1; 4 3 2; -4 -1.2 4") // create an one -indexed Matrix
var (u, d, v)  =  svd(myMat)  // take the SVD, use lower-case starting variables here for pattern matching 

// Matlab equivalent
/*
myMat = [5 3 -1; 4 3 2; -4 -1.2 4]
[u, d, v] = svd(myMat)
*/

// test SVD
var recons = u*d*(v~)
var diff  = recons-myMat
var maxError = max(max(diff))
println( "maximum error at the approximation with svd = "+maxError)

// Sterg-SOS: test max on doubleArray

// verify eigenvalue equation
var ev1 =  eigsVec(::,1)   // first eigenvector
var xeVal1 = myMat*ev1
var xeVal2 = eigsVal(1,1)*ev1

var  diff = xeVal1 - xeVal2  // should be zero


// Mat class
var myMat0 = M("5 3 -1; 4 3 2; -4 -1.2 4") // create a zero-indexed Mat
var (eigsVec0, eigsVal0) = eig(myMat0)


// verify eigenvalue equation
var ev0 =  eigsVec0(::,0)   // first eigenvector
var xeVal10 = myMat0*ev0
var xeVal20 = eigsVal0(0,0)*ev0

var  diff0 = xeVal10 - xeVal20  // should be zero
